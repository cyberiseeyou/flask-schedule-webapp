"""Add auto-scheduler tables and event parent reference

Revision ID: 62eca6d029af
Revises: 1bc16a06f62e
Create Date: 2025-10-01 14:51:12.453730

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '62eca6d029af'
down_revision = '1bc16a06f62e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scheduler_run_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_type', sa.String(length=20), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('total_events_processed', sa.Integer(), nullable=True),
    sa.Column('events_scheduled', sa.Integer(), nullable=True),
    sa.Column('events_requiring_swaps', sa.Integer(), nullable=True),
    sa.Column('events_failed', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('approved_by_user', sa.String(), nullable=True),
    sa.CheckConstraint("run_type IN ('automatic', 'manual')", name='ck_valid_run_type'),
    sa.CheckConstraint("status IN ('running', 'completed', 'failed', 'crashed')", name='ck_valid_status'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pending_schedules',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('scheduler_run_id', sa.Integer(), nullable=False),
    sa.Column('event_ref_num', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.String(), nullable=False),
    sa.Column('schedule_datetime', sa.DateTime(), nullable=False),
    sa.Column('schedule_time', sa.Time(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('is_swap', sa.Boolean(), nullable=True),
    sa.Column('bumped_event_ref_num', sa.Integer(), nullable=True),
    sa.Column('swap_reason', sa.Text(), nullable=True),
    sa.Column('failure_reason', sa.Text(), nullable=True),
    sa.Column('api_error_details', sa.Text(), nullable=True),
    sa.Column('api_submitted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("status IN ('proposed', 'user_edited', 'approved', 'api_submitted', 'api_failed')", name='ck_valid_pending_status'),
    sa.ForeignKeyConstraint(['bumped_event_ref_num'], ['events.project_ref_num'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['event_ref_num'], ['events.project_ref_num'], ),
    sa.ForeignKeyConstraint(['scheduler_run_id'], ['scheduler_run_history.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pending_schedules', schema=None) as batch_op:
        batch_op.create_index('idx_pending_schedules_run', ['scheduler_run_id'], unique=False)
        batch_op.create_index('idx_pending_schedules_status', ['status'], unique=False)

    op.create_table('rotation_assignments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=False),
    sa.Column('rotation_type', sa.String(length=20), nullable=False),
    sa.Column('employee_id', sa.String(), nullable=False),
    sa.CheckConstraint("rotation_type IN ('juicer', 'primary_lead')", name='ck_valid_rotation_type'),
    sa.CheckConstraint('day_of_week >= 0 AND day_of_week <= 4', name='ck_valid_day'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('day_of_week', 'rotation_type', name='uq_rotation')
    )
    op.create_table('schedule_exceptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('exception_date', sa.Date(), nullable=False),
    sa.Column('rotation_type', sa.String(length=20), nullable=False),
    sa.Column('employee_id', sa.String(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("rotation_type IN ('juicer', 'primary_lead')", name='ck_valid_exception_type'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exception_date', 'rotation_type', name='uq_exception')
    )
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.alter_column('job_title',
               existing_type=sa.VARCHAR(length=50),
               nullable=False,
               existing_server_default=sa.text("'Event Specialist'"))
        batch_op.alter_column('adult_beverage_trained',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('external_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('last_synced',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('sync_status',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'"))
        batch_op.create_unique_constraint('uq_employees_external_id', ['external_id'])

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('parent_event_ref_num', sa.Integer(), nullable=True))
        batch_op.alter_column('event_type',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'Other'"))
        batch_op.alter_column('external_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('last_synced',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('sync_status',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'"))
        batch_op.create_unique_constraint('uq_events_external_id', ['external_id'])
        batch_op.create_foreign_key('fk_events_parent_event', 'events', ['parent_event_ref_num'], ['project_ref_num'])

    with op.batch_alter_table('schedules', schema=None) as batch_op:
        batch_op.alter_column('external_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('last_synced',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('sync_status',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'"))
        batch_op.create_unique_constraint('uq_schedules_external_id', ['external_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('schedules', schema=None) as batch_op:
        batch_op.drop_constraint('uq_schedules_external_id', type_='unique')
        batch_op.alter_column('sync_status',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('last_synced',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('external_id',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_constraint('fk_events_parent_event', type_='foreignkey')
        batch_op.drop_constraint('uq_events_external_id', type_='unique')
        batch_op.alter_column('sync_status',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('last_synced',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('external_id',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('event_type',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'Other'"))
        batch_op.drop_column('parent_event_ref_num')

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.drop_constraint('uq_employees_external_id', type_='unique')
        batch_op.alter_column('sync_status',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('last_synced',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('external_id',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('adult_beverage_trained',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('job_title',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'Event Specialist'"))

    op.drop_table('schedule_exceptions')
    op.drop_table('rotation_assignments')
    with op.batch_alter_table('pending_schedules', schema=None) as batch_op:
        batch_op.drop_index('idx_pending_schedules_status')
        batch_op.drop_index('idx_pending_schedules_run')

    op.drop_table('pending_schedules')
    op.drop_table('scheduler_run_history')
    # ### end Alembic commands ###
