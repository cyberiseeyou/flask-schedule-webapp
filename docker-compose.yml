version: '3.8'

services:
  web:
    build: .
    container_name: flask-schedule-webapp
    ports:
      - "8135:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=scheduler_app/app.py
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - SQLALCHEMY_DATABASE_URI=sqlite:///instance/scheduler.db
    volumes:
      - ./scheduler_app/instance:/app/scheduler_app/instance
      - ./scheduler_app/docs:/app/scheduler_app/docs
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - app-network

  # Optional: PostgreSQL database (uncomment to use instead of SQLite)
  # db:
  #   image: postgres:15-alpine
  #   container_name: flask-schedule-db
  #   environment:
  #     - POSTGRES_USER=scheduler
  #     - POSTGRES_PASSWORD=scheduler_password
  #     - POSTGRES_DB=scheduler_db
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - app-network

  # Optional: Redis for Celery (uncomment if using background tasks)
  # redis:
  #   image: redis:7-alpine
  #   container_name: flask-schedule-redis
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - app-network

  # Optional: Celery worker (uncomment if using background tasks)
  # celery-worker:
  #   build: .
  #   container_name: flask-schedule-celery
  #   command: celery -A scheduler_app.celery_worker worker --loglevel=info
  #   environment:
  #     - CELERY_BROKER_URL=redis://redis:6379/0
  #     - CELERY_RESULT_BACKEND=redis://redis:6379/0
  #   depends_on:
  #     - redis
  #     - web
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
